// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calibrate_Rqv_cluster_probabilities
void calibrate_Rqv_cluster_probabilities(Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& E_tr_BiBit_qv, const Eigen::Map<Eigen::MatrixXd>& E_log_det_Rqv_inv, const Eigen::Map<Eigen::MatrixXd>& E_Rqv_inv, const Eigen::Map<Eigen::VectorXd>& E_Rqv_log_nu_h, const Eigen::Map<Eigen::VectorXd>& E_Rqv_log_1_minus_nu_h, double E_sigma_sq_inv, int V, int N);
RcppExport SEXP _BBSS_calibrate_Rqv_cluster_probabilities(SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_tr_BiBit_qvSEXP, SEXP E_log_det_Rqv_invSEXP, SEXP E_Rqv_invSEXP, SEXP E_Rqv_log_nu_hSEXP, SEXP E_Rqv_log_1_minus_nu_hSEXP, SEXP E_sigma_sq_invSEXP, SEXP VSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_tr_BiBit_qv(E_tr_BiBit_qvSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_log_det_Rqv_inv(E_log_det_Rqv_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Rqv_inv(E_Rqv_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_Rqv_log_nu_h(E_Rqv_log_nu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_Rqv_log_1_minus_nu_h(E_Rqv_log_1_minus_nu_hSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    calibrate_Rqv_cluster_probabilities(pi_Ztildeqv_eq_h, E_tr_BiBit_qv, E_log_det_Rqv_inv, E_Rqv_inv, E_Rqv_log_nu_h, E_Rqv_log_1_minus_nu_h, E_sigma_sq_inv, V, N);
    return R_NilValue;
END_RCPP
}
// calibrate_Rqv_cluster_parameters
void calibrate_Rqv_cluster_parameters(Eigen::Map<Eigen::VectorXd>& VarHyper_Rqv_df, Eigen::Map<Eigen::MatrixXd>& VarHyper_Rqv_scale, const Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& E_tr_BiBit_qv, const Eigen::Map<Eigen::MatrixXd>& base_measure_scale, double E_sigma_sq_inv, double base_measure_df, int V, int N);
RcppExport SEXP _BBSS_calibrate_Rqv_cluster_parameters(SEXP VarHyper_Rqv_dfSEXP, SEXP VarHyper_Rqv_scaleSEXP, SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_tr_BiBit_qvSEXP, SEXP base_measure_scaleSEXP, SEXP E_sigma_sq_invSEXP, SEXP base_measure_dfSEXP, SEXP VSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type VarHyper_Rqv_df(VarHyper_Rqv_dfSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type VarHyper_Rqv_scale(VarHyper_Rqv_scaleSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_tr_BiBit_qv(E_tr_BiBit_qvSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type base_measure_scale(base_measure_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type base_measure_df(base_measure_dfSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    calibrate_Rqv_cluster_parameters(VarHyper_Rqv_df, VarHyper_Rqv_scale, pi_Ztildeqv_eq_h, E_tr_BiBit_qv, base_measure_scale, E_sigma_sq_inv, base_measure_df, V, N);
    return R_NilValue;
END_RCPP
}
// calibrate_spatial_map_cluster_probabilities
void calibrate_spatial_map_cluster_probabilities(Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_log_nu_h, const Eigen::Map<Eigen::VectorXd>& E_log_1_minus_nu_h, const Eigen::Map<Eigen::VectorXd>& E_log_gamma_h_sq, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& E_mu_h_sq, const Eigen::Map<Eigen::MatrixXd>& E_S, const Eigen::Map<Eigen::MatrixXd>& E_S_sq, double E_sigma_sq_inv);
RcppExport SEXP _BBSS_calibrate_spatial_map_cluster_probabilities(SEXP pi_Zqv_eq_hSEXP, SEXP E_log_nu_hSEXP, SEXP E_log_1_minus_nu_hSEXP, SEXP E_log_gamma_h_sqSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_mu_h_sqSEXP, SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_sigma_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_log_nu_h(E_log_nu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_log_1_minus_nu_h(E_log_1_minus_nu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_log_gamma_h_sq(E_log_gamma_h_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h_sq(E_mu_h_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    calibrate_spatial_map_cluster_probabilities(pi_Zqv_eq_h, E_log_nu_h, E_log_1_minus_nu_h, E_log_gamma_h_sq, E_gamma_h_sq_inv, E_mu_h, E_mu_h_sq, E_S, E_S_sq, E_sigma_sq_inv);
    return R_NilValue;
END_RCPP
}
// calibrate_spatial_map_cluster_parameters
void calibrate_spatial_map_cluster_parameters(Eigen::Map<Eigen::VectorXd>& VarHyper_M_h, Eigen::Map<Eigen::VectorXd>& VarHyper_L_h, Eigen::Map<Eigen::VectorXd>& VarHyper_A_h, Eigen::Map<Eigen::VectorXd>& VarHyper_B_h, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& E_S, const Eigen::Map<Eigen::MatrixXd>& E_S_sq, double E_sigma_sq_inv, double base_measure_lambda, double base_measure_mu, double base_measure_alpha, double base_measure_beta);
RcppExport SEXP _BBSS_calibrate_spatial_map_cluster_parameters(SEXP VarHyper_M_hSEXP, SEXP VarHyper_L_hSEXP, SEXP VarHyper_A_hSEXP, SEXP VarHyper_B_hSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP base_measure_lambdaSEXP, SEXP base_measure_muSEXP, SEXP base_measure_alphaSEXP, SEXP base_measure_betaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type VarHyper_M_h(VarHyper_M_hSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type VarHyper_L_h(VarHyper_L_hSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type VarHyper_A_h(VarHyper_A_hSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type VarHyper_B_h(VarHyper_B_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type base_measure_lambda(base_measure_lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type base_measure_mu(base_measure_muSEXP);
    Rcpp::traits::input_parameter< double >::type base_measure_alpha(base_measure_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type base_measure_beta(base_measure_betaSEXP);
    calibrate_spatial_map_cluster_parameters(VarHyper_M_h, VarHyper_L_h, VarHyper_A_h, VarHyper_B_h, pi_Zqv_eq_h, E_S, E_S_sq, E_sigma_sq_inv, base_measure_lambda, base_measure_mu, base_measure_alpha, base_measure_beta);
    return R_NilValue;
END_RCPP
}
// cross_sectional_spatial_map_updates
void cross_sectional_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, double E_sigma_sq_inv);
RcppExport SEXP _BBSS_cross_sectional_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_SiSEXP, SEXP YSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_sigma_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    cross_sectional_spatial_map_updates(E_S, E_S_sq, E_Si, Y, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_sigma_sq_inv);
    return R_NilValue;
END_RCPP
}
// cross_sectional_siteadj_spatial_map_updates
void cross_sectional_siteadj_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_b_site, Eigen::Map<Eigen::VectorXd>& sum_E_b_site_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, double E_sigma_sq_inv, double E_sigma_site_sq_inv);
RcppExport SEXP _BBSS_cross_sectional_siteadj_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_b_siteSEXP, SEXP sum_E_b_site_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP YSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_b_site(E_b_siteSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type sum_E_b_site_sq(sum_E_b_site_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    cross_sectional_siteadj_spatial_map_updates(E_S, E_S_sq, E_b_site, sum_E_b_site_sq, E_Si, trace_E_Si_sq, Y, site_indicators, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_sigma_sq_inv, E_sigma_site_sq_inv);
    return R_NilValue;
END_RCPP
}
// cross_sectional_covadj_spatial_map_updates
void cross_sectional_covadj_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv);
RcppExport SEXP _BBSS_cross_sectional_covadj_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    cross_sectional_covadj_spatial_map_updates(E_S, E_S_sq, E_Beta, E_Beta_sq, E_Si, trace_E_Si_sq, Y, X, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv);
    return R_NilValue;
END_RCPP
}
// cross_sectional_covadj_siteadj_spatial_map_updates
void cross_sectional_covadj_siteadj_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_b_site, Eigen::Map<Eigen::VectorXd>& sum_E_b_site_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, double E_sigma_site_sq_inv);
RcppExport SEXP _BBSS_cross_sectional_covadj_siteadj_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_b_siteSEXP, SEXP sum_E_b_site_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_b_site(E_b_siteSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type sum_E_b_site_sq(sum_E_b_site_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    cross_sectional_covadj_siteadj_spatial_map_updates(E_S, E_S_sq, E_Beta, E_Beta_sq, E_b_site, sum_E_b_site_sq, E_Si, trace_E_Si_sq, Y, X, site_indicators, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, E_sigma_site_sq_inv);
    return R_NilValue;
END_RCPP
}
// cross_sectional_covadj_siteadj_spatial_map_blocked_updates
void cross_sectional_covadj_siteadj_spatial_map_blocked_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_b_site, Eigen::Map<Eigen::VectorXd>& sum_E_b_site_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, double E_sigma_site_sq_inv);
RcppExport SEXP _BBSS_cross_sectional_covadj_siteadj_spatial_map_blocked_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_b_siteSEXP, SEXP sum_E_b_site_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_b_site(E_b_siteSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type sum_E_b_site_sq(sum_E_b_site_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    cross_sectional_covadj_siteadj_spatial_map_blocked_updates(E_S, E_S_sq, E_Beta, E_Beta_sq, E_b_site, sum_E_b_site_sq, E_Si, trace_E_Si_sq, Y, X, site_indicators, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, E_sigma_site_sq_inv);
    return R_NilValue;
END_RCPP
}
// update_error_variance_variational_scale
double update_error_variance_variational_scale(const Eigen::Map<Eigen::MatrixXd>& Y_unmixed, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& E_S, const Eigen::Map<Eigen::MatrixXd>& E_Si, const Eigen::Map<Eigen::MatrixXd>& E_S_sq, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& E_mu_h_sq, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, double sum_trace_YYt, double sum_trace_E_Si_sq);
RcppExport SEXP _BBSS_update_error_variance_variational_scale(SEXP Y_unmixedSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_SSEXP, SEXP E_SiSEXP, SEXP E_S_sqSEXP, SEXP E_mu_hSEXP, SEXP E_mu_h_sqSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP sum_trace_YYtSEXP, SEXP sum_trace_E_Si_sqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y_unmixed(Y_unmixedSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h_sq(E_mu_h_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type sum_trace_YYt(sum_trace_YYtSEXP);
    Rcpp::traits::input_parameter< double >::type sum_trace_E_Si_sq(sum_trace_E_Si_sqSEXP);
    rcpp_result_gen = Rcpp::wrap(update_error_variance_variational_scale(Y_unmixed, pi_Zqv_eq_h, E_S, E_Si, E_S_sq, E_mu_h, E_mu_h_sq, E_gamma_h_sq_inv, sum_trace_YYt, sum_trace_E_Si_sq));
    return rcpp_result_gen;
END_RCPP
}
// update_error_variance_variational_scale_covadj
double update_error_variance_variational_scale_covadj(const Eigen::Map<Eigen::MatrixXd>& Y_unmixed, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& E_S, const Eigen::Map<Eigen::MatrixXd>& E_Si, const Eigen::Map<Eigen::MatrixXd>& E_S_sq, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& E_mu_h_sq, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double sum_trace_YYt, double sum_trace_E_Si_sq, double E_tau_sq_inv);
RcppExport SEXP _BBSS_update_error_variance_variational_scale_covadj(SEXP Y_unmixedSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_SSEXP, SEXP E_SiSEXP, SEXP E_S_sqSEXP, SEXP E_mu_hSEXP, SEXP E_mu_h_sqSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_Beta_sqSEXP, SEXP E_lambda_sqSEXP, SEXP sum_trace_YYtSEXP, SEXP sum_trace_E_Si_sqSEXP, SEXP E_tau_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y_unmixed(Y_unmixedSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h_sq(E_mu_h_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type sum_trace_YYt(sum_trace_YYtSEXP);
    Rcpp::traits::input_parameter< double >::type sum_trace_E_Si_sq(sum_trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    rcpp_result_gen = Rcpp::wrap(update_error_variance_variational_scale_covadj(Y_unmixed, pi_Zqv_eq_h, E_S, E_Si, E_S_sq, E_mu_h, E_mu_h_sq, E_gamma_h_sq_inv, E_Beta_sq, E_lambda_sq, sum_trace_YYt, sum_trace_E_Si_sq, E_tau_sq_inv));
    return rcpp_result_gen;
END_RCPP
}
// eval_LC_cross_sectional_covadj
Eigen::MatrixXd eval_LC_cross_sectional_covadj(const Eigen::Map<Eigen::MatrixXd>& contrasts, const Eigen::Map<Eigen::MatrixXd>& contrast_specification, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, int V, bool calculate_credible_interval, double credible_interval_width_pct, bool calculate_savage_dickey, bool imp_sample_savage_dickey, int n_importance_resample);
RcppExport SEXP _BBSS_eval_LC_cross_sectional_covadj(SEXP contrastsSEXP, SEXP contrast_specificationSEXP, SEXP YSEXP, SEXP XSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP VSEXP, SEXP calculate_credible_intervalSEXP, SEXP credible_interval_width_pctSEXP, SEXP calculate_savage_dickeySEXP, SEXP imp_sample_savage_dickeySEXP, SEXP n_importance_resampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrasts(contrastsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrast_specification(contrast_specificationSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_credible_interval(calculate_credible_intervalSEXP);
    Rcpp::traits::input_parameter< double >::type credible_interval_width_pct(credible_interval_width_pctSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_savage_dickey(calculate_savage_dickeySEXP);
    Rcpp::traits::input_parameter< bool >::type imp_sample_savage_dickey(imp_sample_savage_dickeySEXP);
    Rcpp::traits::input_parameter< int >::type n_importance_resample(n_importance_resampleSEXP);
    rcpp_result_gen = Rcpp::wrap(eval_LC_cross_sectional_covadj(contrasts, contrast_specification, Y, X, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, V, calculate_credible_interval, credible_interval_width_pct, calculate_savage_dickey, imp_sample_savage_dickey, n_importance_resample));
    return rcpp_result_gen;
END_RCPP
}
// eval_LC_cross_sectional_covadj_siteadj
Eigen::MatrixXd eval_LC_cross_sectional_covadj_siteadj(const Eigen::Map<Eigen::MatrixXd>& contrasts, const Eigen::Map<Eigen::MatrixXd>& contrast_specification, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, double E_sigma_site_sq_inv, int V, bool calculate_credible_interval, double credible_interval_width_pct, bool calculate_savage_dickey, bool imp_sample_savage_dickey, int n_importance_resample);
RcppExport SEXP _BBSS_eval_LC_cross_sectional_covadj_siteadj(SEXP contrastsSEXP, SEXP contrast_specificationSEXP, SEXP YSEXP, SEXP XSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP, SEXP VSEXP, SEXP calculate_credible_intervalSEXP, SEXP credible_interval_width_pctSEXP, SEXP calculate_savage_dickeySEXP, SEXP imp_sample_savage_dickeySEXP, SEXP n_importance_resampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrasts(contrastsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrast_specification(contrast_specificationSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_credible_interval(calculate_credible_intervalSEXP);
    Rcpp::traits::input_parameter< double >::type credible_interval_width_pct(credible_interval_width_pctSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_savage_dickey(calculate_savage_dickeySEXP);
    Rcpp::traits::input_parameter< bool >::type imp_sample_savage_dickey(imp_sample_savage_dickeySEXP);
    Rcpp::traits::input_parameter< int >::type n_importance_resample(n_importance_resampleSEXP);
    rcpp_result_gen = Rcpp::wrap(eval_LC_cross_sectional_covadj_siteadj(contrasts, contrast_specification, Y, X, site_indicators, pi_Zqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, E_sigma_site_sq_inv, V, calculate_credible_interval, credible_interval_width_pct, calculate_savage_dickey, imp_sample_savage_dickey, n_importance_resample));
    return rcpp_result_gen;
END_RCPP
}
// eval_LC_longitudinal_covadj
Eigen::MatrixXd eval_LC_longitudinal_covadj(const Eigen::Map<Eigen::MatrixXd>& contrasts, const Eigen::Map<Eigen::MatrixXd>& contrast_specification, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& Xrand, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, const Eigen::Map<Eigen::MatrixXd>& E_Rqv_h_inv, double E_sigma_sq_inv, double E_tau_sq_inv, int V, bool calculate_credible_interval, double credible_interval_width_pct, bool calculate_savage_dickey, bool imp_sample_savage_dickey, int n_importance_resampl);
RcppExport SEXP _BBSS_eval_LC_longitudinal_covadj(SEXP contrastsSEXP, SEXP contrast_specificationSEXP, SEXP YSEXP, SEXP XSEXP, SEXP XrandSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_mu_hSEXP, SEXP E_lambda_sqSEXP, SEXP E_Rqv_h_invSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP VSEXP, SEXP calculate_credible_intervalSEXP, SEXP credible_interval_width_pctSEXP, SEXP calculate_savage_dickeySEXP, SEXP imp_sample_savage_dickeySEXP, SEXP n_importance_resamplSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrasts(contrastsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type contrast_specification(contrast_specificationSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Xrand(XrandSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Rqv_h_inv(E_Rqv_h_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_credible_interval(calculate_credible_intervalSEXP);
    Rcpp::traits::input_parameter< double >::type credible_interval_width_pct(credible_interval_width_pctSEXP);
    Rcpp::traits::input_parameter< bool >::type calculate_savage_dickey(calculate_savage_dickeySEXP);
    Rcpp::traits::input_parameter< bool >::type imp_sample_savage_dickey(imp_sample_savage_dickeySEXP);
    Rcpp::traits::input_parameter< int >::type n_importance_resampl(n_importance_resamplSEXP);
    rcpp_result_gen = Rcpp::wrap(eval_LC_longitudinal_covadj(contrasts, contrast_specification, Y, X, Xrand, pi_Zqv_eq_h, pi_Ztildeqv_eq_h, E_gamma_h_sq_inv, E_mu_h, E_lambda_sq, E_Rqv_h_inv, E_sigma_sq_inv, E_tau_sq_inv, V, calculate_credible_interval, credible_interval_width_pct, calculate_savage_dickey, imp_sample_savage_dickey, n_importance_resampl));
    return rcpp_result_gen;
END_RCPP
}
// longitudinal_covadj_siteadj_spatial_map_updates
void longitudinal_covadj_siteadj_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_b_site, Eigen::Map<Eigen::VectorXd>& sum_E_b_site_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, Eigen::Map<Eigen::MatrixXd>& E_tr_BiBit_qv, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& Xrand, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::MatrixXd>& E_Rqv_h_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& Ji, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, double E_sigma_site_sq_inv);
RcppExport SEXP _BBSS_longitudinal_covadj_siteadj_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_b_siteSEXP, SEXP sum_E_b_site_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP E_tr_BiBit_qvSEXP, SEXP YSEXP, SEXP XSEXP, SEXP XrandSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_Rqv_h_invSEXP, SEXP E_mu_hSEXP, SEXP JiSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_b_site(E_b_siteSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type sum_E_b_site_sq(sum_E_b_site_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_tr_BiBit_qv(E_tr_BiBit_qvSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Xrand(XrandSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Rqv_h_inv(E_Rqv_h_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type Ji(JiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    longitudinal_covadj_siteadj_spatial_map_updates(E_S, E_S_sq, E_Beta, E_Beta_sq, E_b_site, sum_E_b_site_sq, E_Si, trace_E_Si_sq, E_tr_BiBit_qv, Y, X, Xrand, site_indicators, pi_Zqv_eq_h, pi_Ztildeqv_eq_h, E_gamma_h_sq_inv, E_Rqv_h_inv, E_mu_h, Ji, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, E_sigma_site_sq_inv);
    return R_NilValue;
END_RCPP
}
// longitudinal_covadj_siteadj_spatial_map_updates_fast
void longitudinal_covadj_siteadj_spatial_map_updates_fast(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_b_site, Eigen::Map<Eigen::VectorXd>& sum_E_b_site_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, Eigen::Map<Eigen::MatrixXd>& E_tr_BiBit_qv, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& Xrand, const Eigen::Map<Eigen::MatrixXd>& site_indicators, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::MatrixXd>& E_Rqv_h_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& Ji, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv, double E_sigma_site_sq_inv);
RcppExport SEXP _BBSS_longitudinal_covadj_siteadj_spatial_map_updates_fast(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_b_siteSEXP, SEXP sum_E_b_site_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP E_tr_BiBit_qvSEXP, SEXP YSEXP, SEXP XSEXP, SEXP XrandSEXP, SEXP site_indicatorsSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_Rqv_h_invSEXP, SEXP E_mu_hSEXP, SEXP JiSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP, SEXP E_sigma_site_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_b_site(E_b_siteSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd>& >::type sum_E_b_site_sq(sum_E_b_site_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_tr_BiBit_qv(E_tr_BiBit_qvSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Xrand(XrandSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type site_indicators(site_indicatorsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Rqv_h_inv(E_Rqv_h_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type Ji(JiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_site_sq_inv(E_sigma_site_sq_invSEXP);
    longitudinal_covadj_siteadj_spatial_map_updates_fast(E_S, E_S_sq, E_Beta, E_Beta_sq, E_b_site, sum_E_b_site_sq, E_Si, trace_E_Si_sq, E_tr_BiBit_qv, Y, X, Xrand, site_indicators, pi_Zqv_eq_h, pi_Ztildeqv_eq_h, E_gamma_h_sq_inv, E_Rqv_h_inv, E_mu_h, Ji, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv, E_sigma_site_sq_inv);
    return R_NilValue;
END_RCPP
}
// longitudinal_covadj_spatial_map_updates
void longitudinal_covadj_spatial_map_updates(Eigen::Map<Eigen::MatrixXd>& E_S, Eigen::Map<Eigen::MatrixXd>& E_S_sq, Eigen::Map<Eigen::MatrixXd>& E_Beta, Eigen::Map<Eigen::MatrixXd>& E_Beta_sq, Eigen::Map<Eigen::MatrixXd>& E_Si, Eigen::Map<Eigen::MatrixXd>& trace_E_Si_sq, Eigen::Map<Eigen::MatrixXd>& E_tr_BiBit_qv, const Eigen::Map<Eigen::MatrixXd>& Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::Map<Eigen::MatrixXd>& Xrand, const Eigen::Map<Eigen::MatrixXd>& pi_Zqv_eq_h, const Eigen::Map<Eigen::MatrixXd>& pi_Ztildeqv_eq_h, const Eigen::Map<Eigen::VectorXd>& E_gamma_h_sq_inv, const Eigen::Map<Eigen::MatrixXd>& E_Rqv_h_inv, const Eigen::Map<Eigen::VectorXd>& E_mu_h, const Eigen::Map<Eigen::VectorXd>& Ji, const Eigen::Map<Eigen::MatrixXd>& E_lambda_sq, double E_sigma_sq_inv, double E_tau_sq_inv);
RcppExport SEXP _BBSS_longitudinal_covadj_spatial_map_updates(SEXP E_SSEXP, SEXP E_S_sqSEXP, SEXP E_BetaSEXP, SEXP E_Beta_sqSEXP, SEXP E_SiSEXP, SEXP trace_E_Si_sqSEXP, SEXP E_tr_BiBit_qvSEXP, SEXP YSEXP, SEXP XSEXP, SEXP XrandSEXP, SEXP pi_Zqv_eq_hSEXP, SEXP pi_Ztildeqv_eq_hSEXP, SEXP E_gamma_h_sq_invSEXP, SEXP E_Rqv_h_invSEXP, SEXP E_mu_hSEXP, SEXP JiSEXP, SEXP E_lambda_sqSEXP, SEXP E_sigma_sq_invSEXP, SEXP E_tau_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S(E_SSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_S_sq(E_S_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta(E_BetaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Beta_sq(E_Beta_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type trace_E_Si_sq(trace_E_Si_sqSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type E_tr_BiBit_qv(E_tr_BiBit_qvSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Xrand(XrandSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Zqv_eq_h(pi_Zqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pi_Ztildeqv_eq_h(pi_Ztildeqv_eq_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_gamma_h_sq_inv(E_gamma_h_sq_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Rqv_h_inv(E_Rqv_h_invSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type E_mu_h(E_mu_hSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd>& >::type Ji(JiSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_lambda_sq(E_lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    Rcpp::traits::input_parameter< double >::type E_tau_sq_inv(E_tau_sq_invSEXP);
    longitudinal_covadj_spatial_map_updates(E_S, E_S_sq, E_Beta, E_Beta_sq, E_Si, trace_E_Si_sq, E_tr_BiBit_qv, Y, X, Xrand, pi_Zqv_eq_h, pi_Ztildeqv_eq_h, E_gamma_h_sq_inv, E_Rqv_h_inv, E_mu_h, Ji, E_lambda_sq, E_sigma_sq_inv, E_tau_sq_inv);
    return R_NilValue;
END_RCPP
}
// update_all_mixing_matrices
void update_all_mixing_matrices(Eigen::Map<Eigen::MatrixXd>& A, const Eigen::Map<Eigen::MatrixXd>& Y_mixed_QxVN, const Eigen::Map<Eigen::MatrixXd>& E_Si, double E_sigma_sq_inv);
RcppExport SEXP _BBSS_update_all_mixing_matrices(SEXP ASEXP, SEXP Y_mixed_QxVNSEXP, SEXP E_SiSEXP, SEXP E_sigma_sq_invSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y_mixed_QxVN(Y_mixed_QxVNSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type E_Si(E_SiSEXP);
    Rcpp::traits::input_parameter< double >::type E_sigma_sq_inv(E_sigma_sq_invSEXP);
    update_all_mixing_matrices(A, Y_mixed_QxVN, E_Si, E_sigma_sq_inv);
    return R_NilValue;
END_RCPP
}
// apply_unmixing_matrices
void apply_unmixing_matrices(Eigen::Map<Eigen::MatrixXd>& Y_unmixed, const Eigen::Map<Eigen::MatrixXd>& Y_mixed_QxNV, const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP _BBSS_apply_unmixing_matrices(SEXP Y_unmixedSEXP, SEXP Y_mixed_QxNVSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type Y_unmixed(Y_unmixedSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type Y_mixed_QxNV(Y_mixed_QxNVSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    apply_unmixing_matrices(Y_unmixed, Y_mixed_QxNV, A);
    return R_NilValue;
END_RCPP
}
// rcppeigen_hello_world
Eigen::MatrixXd rcppeigen_hello_world();
RcppExport SEXP _BBSS_rcppeigen_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcppeigen_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcppeigen_outerproduct
Eigen::MatrixXd rcppeigen_outerproduct(const Eigen::VectorXd& x);
RcppExport SEXP _BBSS_rcppeigen_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppeigen_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcppeigen_innerproduct
double rcppeigen_innerproduct(const Eigen::VectorXd& x);
RcppExport SEXP _BBSS_rcppeigen_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppeigen_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcppeigen_bothproducts
Rcpp::List rcppeigen_bothproducts(const Eigen::VectorXd& x);
RcppExport SEXP _BBSS_rcppeigen_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppeigen_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BBSS_calibrate_Rqv_cluster_probabilities", (DL_FUNC) &_BBSS_calibrate_Rqv_cluster_probabilities, 9},
    {"_BBSS_calibrate_Rqv_cluster_parameters", (DL_FUNC) &_BBSS_calibrate_Rqv_cluster_parameters, 9},
    {"_BBSS_calibrate_spatial_map_cluster_probabilities", (DL_FUNC) &_BBSS_calibrate_spatial_map_cluster_probabilities, 10},
    {"_BBSS_calibrate_spatial_map_cluster_parameters", (DL_FUNC) &_BBSS_calibrate_spatial_map_cluster_parameters, 12},
    {"_BBSS_cross_sectional_spatial_map_updates", (DL_FUNC) &_BBSS_cross_sectional_spatial_map_updates, 8},
    {"_BBSS_cross_sectional_siteadj_spatial_map_updates", (DL_FUNC) &_BBSS_cross_sectional_siteadj_spatial_map_updates, 13},
    {"_BBSS_cross_sectional_covadj_spatial_map_updates", (DL_FUNC) &_BBSS_cross_sectional_covadj_spatial_map_updates, 14},
    {"_BBSS_cross_sectional_covadj_siteadj_spatial_map_updates", (DL_FUNC) &_BBSS_cross_sectional_covadj_siteadj_spatial_map_updates, 18},
    {"_BBSS_cross_sectional_covadj_siteadj_spatial_map_blocked_updates", (DL_FUNC) &_BBSS_cross_sectional_covadj_siteadj_spatial_map_blocked_updates, 18},
    {"_BBSS_update_error_variance_variational_scale", (DL_FUNC) &_BBSS_update_error_variance_variational_scale, 10},
    {"_BBSS_update_error_variance_variational_scale_covadj", (DL_FUNC) &_BBSS_update_error_variance_variational_scale_covadj, 13},
    {"_BBSS_eval_LC_cross_sectional_covadj", (DL_FUNC) &_BBSS_eval_LC_cross_sectional_covadj, 16},
    {"_BBSS_eval_LC_cross_sectional_covadj_siteadj", (DL_FUNC) &_BBSS_eval_LC_cross_sectional_covadj_siteadj, 18},
    {"_BBSS_eval_LC_longitudinal_covadj", (DL_FUNC) &_BBSS_eval_LC_longitudinal_covadj, 19},
    {"_BBSS_longitudinal_covadj_siteadj_spatial_map_updates", (DL_FUNC) &_BBSS_longitudinal_covadj_siteadj_spatial_map_updates, 23},
    {"_BBSS_longitudinal_covadj_siteadj_spatial_map_updates_fast", (DL_FUNC) &_BBSS_longitudinal_covadj_siteadj_spatial_map_updates_fast, 23},
    {"_BBSS_longitudinal_covadj_spatial_map_updates", (DL_FUNC) &_BBSS_longitudinal_covadj_spatial_map_updates, 19},
    {"_BBSS_update_all_mixing_matrices", (DL_FUNC) &_BBSS_update_all_mixing_matrices, 4},
    {"_BBSS_apply_unmixing_matrices", (DL_FUNC) &_BBSS_apply_unmixing_matrices, 3},
    {"_BBSS_rcppeigen_hello_world", (DL_FUNC) &_BBSS_rcppeigen_hello_world, 0},
    {"_BBSS_rcppeigen_outerproduct", (DL_FUNC) &_BBSS_rcppeigen_outerproduct, 1},
    {"_BBSS_rcppeigen_innerproduct", (DL_FUNC) &_BBSS_rcppeigen_innerproduct, 1},
    {"_BBSS_rcppeigen_bothproducts", (DL_FUNC) &_BBSS_rcppeigen_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_BBSS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
